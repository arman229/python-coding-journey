from typing import Dict
solutions:Dict[str,str] = {
    "2-1": "message:str='My name is Arman'\nprint(message)",
    "2-2": "message:str='I have completed Bachelor\'s degree in Mathematics.'\nprint(message)\nnew_message:str=f'My name is Arman.{message}'\nprint(new_message)",
    "2-3": "person_Name:str='Arman'\npersonal_Message:str=f'Hello {person_Name} world you like to learn some Python today?'\nprint(personal_Message)",
    "2-4": "person_Name:str='Arman aShraf'\nprint(person_Name.lower())\nprint(person_Name.upper())\nprint(person_Name.title())",
    "2-5": "famous_person:str='Albert Einstein'\nfamous_quote:str='“A person who never made a mistake never tried anything new.”'\nprint(f'{famous_person} once said , {famous_quote}')",
    "2-6": "famous_person:str='Albert Einstein'\nfamous_quote:str=f'{famous_person} once said , “A person who never made a mistake never tried anything new.”'\nprint(famous_quote)",
    "2-7": "My_Name:str = '\tArman\n  '\nprint(My_Name.lstrip())\nprint(My_Name.rstrip())\nprint(My_Name.strip())",
    "2-8": "file_Name:str='python_notes.txt'\nprint(file_Name.removesuffix('.txt'))",
    "2-9": "print(5+3)\nprint(11-3)\nprint(4*2)\nprint(16//2)",
    "2-10": "favorite_number:int=1\nfavorite_message:str=f'{favorite_number} is my favorite number'\nprint(favorite_message)",
    "2-11": "# Define variables for name and date.\n# my_name: str represents the name of the user.\n# today_date: str represents the current date.\nmy_name: str = 'Arman'\ntoday_date: str = '11 Feb 2024'\n\n# Print the name and date.\nprint(\"Name:\", my_name)\nprint(\"Date:\", today_date)",
    "2-12": "import this",
    "3-1": "names:list[str] = ['sameer','mazher','bilal']\nprint(names[0])\nprint(names[1])\nprint(names[2])",
    "3-2": "names:list[str] = ['sameer','mazher','bilal']\nprint(f'{names[0]} is my favorite friend.' )\nprint(f'{names[1]} is my favorite friend.' )\nprint(f'{names[2]} is my favorite friend.' )",
    "3-3": "favorite_transportation:list[str]=['motercycle','bus']\nprint(f'I have a {favorite_transportation[0]}')\nprint(f'Fair of {favorite_transportation[1]} is low reletive to the car')",
    "3-4": "names:list[str] = ['sameer','mazher','bilal']\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )",
    "3-5": "names:list[str] = ['sameer','mazher','bilal']\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\ndeleted:str=names.pop(1)\nprint(f'Sorry {deleted} can\'t make it to dinner')\nnames.insert(1,'arman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nnames.insert(0,'ashraf')\nnames.insert(len(names)//2, 'zaman')\n\nnames.append('usman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[3]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[4]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[5]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(names)",
    "3-6": "names:list[str] = ['sameer','mazher','bilal']\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\ndeleted:str=names.pop(1)\nprint(f'Sorry {deleted} can\'t make it to dinner')\nnames.insert(1,'arman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nnames.insert(0,'ashraf')\nnames.insert(len(names)//2, 'zaman')\n\nnames.append('usman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[3]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[4]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[5]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(names)",
    "3-7": "names:list[str] = ['sameer','mazher','bilal']\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\ndeleted:str=names.pop(1)\nprint(f'Sorry {deleted} can\'t make it to dinner')\nnames.insert(1,'arman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nnames.insert(0,'ashraf')\nnames.insert(len(names)//2, 'zaman')\n\nnames.append('usman')\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[2]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[3]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[4]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[5]}  ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint('we can invite only two people')\n\ncount:int=len(names)-1\n\nwhile count>=2:\n      deleteditem:str=names.pop()\n      print(f'Sorry {deleteditem}, you are not invited')\n      count-=1\nprint(f'Dear {names[0]} ,\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\nprint(f'Dear {names[1]},\n\tYou are invited to dinner. Please join us for a wonderful evening.\n' )\ndel names[0]\ndel names[0]\n\nprint(names)",
    "3-8": "fav_places:list[str]=['lahore','itlay','france','islambad','new York']\nprint('Original Order')\nprint(fav_places)\nprint(sorted(fav_places))\nprint(fav_places)\nprint(sorted(fav_places,reverse=True))\nprint(fav_places)\nfav_places.reverse()\nprint(fav_places)\nfav_places.reverse()\nprint(fav_places)\nfav_places.sort()\nprint(fav_places)\nfav_places.sort(reverse=True)\nprint(fav_places)",
    "3-9": "total_guest:list[str] = ['ali', 'asad','ahmad']\ntotal_length:int = len(total_guest)\nprint(f'Total guest are {total_length}')",
    "3-10": "five_places = ['Italy', 'Dubai', 'Pakistan', 'Makkah', 'California']\n\nprint(\"Original List:\", five_places)\nfive_places.append('New York')\nprint(\"Appended 'New York':\", five_places)\nfive_places.insert(1, 'Paris')\nprint(\"Inserted 'Paris':\", five_places)\nfive_places.remove('Dubai')\nprint(\"Removed 'Dubai':\", five_places)\npopped_in_five_places = five_places.pop(3)\nprint(\"Popped item at index 3:\", popped_in_five_places)\nindex = five_places.index('Pakistan')\nprint(\"Index of 'Pakistan':\", index)\ncount = five_places.count('Italy')\nprint(\"Count of 'Italy':\", count)\nfive_places.sort()\nprint(\"Sorted List:\", five_places)\nfive_places.reverse()\nprint(\"Reversed List:\", five_places)\ncopy_of_five_places = five_places.copy()\nprint(\"Copy of List:\", copy_of_five_places)\nfive_places.clear()\nprint(\"Cleared List:\", five_places)\nfive_places.extend(['France', 'Spain'])\nprint(\"Extended List:\", five_places)",
    "3-11": "numbers:list[int] = [1, 2, 3, 4, 5]\n\ntry:\n    print(numbers[1])\nexcept IndexError:\n    print(\"IndexError: Index is out of range\")"

        }